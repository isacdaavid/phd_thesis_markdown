x <- 1:10
rand()
runif()
sample(0:1)
sample(0:1, 1)
sample(0:1, 1)
sample(0:1, 1)
sample(0:1, 1)
runif(3)
runif(10)
runif(10)
runif(10)
runif(10)
runif(10)
set.seed(42)
runif(10)
runif(10)
runif(10)
1 -voxel_1
plot(x=voxel_1_cond_1, y=voxel_2_cond_1)
plot(x = voxel_1_cond_1, y = voxel_2_cond_1)
voxel_1_cond_1
sapply(voxel_1_cond_1, function(x) {runif(n = 1, min = x)})
sapply(voxel_1_cond_1, function(x) {runif(n = 1, min = x)})
sapply(voxel_1_cond_1, function(x) {runif(n = 1, min = x)})
plot(x = voxel_1_cond_1, y = voxel_2_cond_1)
plot(x = voxel_1_cond_2, y = voxel_2_cond_2)
data.frame(cond1 = c(voxel_1_cond_1, voxel_2_cond_1), cond2 = c(voxel_1_cond_1, voxel_2_cond_1))
stack(data.frame(cond1 = c(voxel_1_cond_1, voxel_2_cond_1), cond2 = c(voxel_1_cond_1, voxel_2_cond_1)))
data.frame(voxel_1 = c(voxel_1_cond_1, voxel_1_cond_2), voxel_2 = c(voxel_2_cond_1, voxel_2_cond_2))
repeat(1, 3)
sample(3)
sample(5)
rep("asdf", 3)
data.frame(voxel_1 = c(voxel_1_cond_1, voxel_1_cond_2), voxel_2 = c(voxel_2_cond_1, voxel_2_cond_2), cond = c(rep("A", n), rep("B", n)))
data.frame(voxel_1 = c(voxel_1_cond_1, voxel_1_cond_2), voxel_2 = c(voxel_2_cond_1, voxel_2_cond_2), cond = c(rep("A", n), rep("B", n)))
c(rep("A", n), rep("B", n))
c(rep("A", n), rep("B", n))
data.frame(voxel_1 = c(voxel_1_cond_1, voxel_1_cond_2), voxel_2 = c(voxel_2_cond_1, voxel_2_cond_2), cond = c(rep("A", n), rep("B", n)))
?runif
data
ggplot(data, aes(color = cond)) + geom_point()
ggplot(data, aes(x = voxel_1, y = voxel_2, color = cond)) + geom_point()
ggplot(data, aes(x = voxel_1, y = voxel_2, color = cond)) + geom_point()
ggplot(data, aes(x = cond, y = voxel_1)) + geom_bloxplot()
ggplot(data, aes(x = cond, y = voxel_1)) + geom_boxplot()
ggplot(data, aes(x = cond, y = voxel_1)) + geom_boxplot()
lm(voxel_1 ~ cond, data)
summary(lm(voxel_1 ~ cond, data))
plot(x = data$cond, y = data$voxel_1)
ggplot(data, aes(x = data$cond, y = data$voxel_1)) + geom_point()
ggplot(data, aes(x = data$cond, y = data$voxel_2)) + geom_point()
ggplot(data, aes(x = data$cond, y = data$voxel_2)) + geom_point()
ggplot(data, aes(x = data$cond, y = data$voxel_2)) + geom_point()
ggplot(data, aes(x = data$cond, y = data$voxel_2)) + geom_point()
summary(lm(voxel_2 ~ cond, data))
ggplot(data, aes(x = data$cond, y = data$voxel_2)) + geom_point()
ggplot(data, aes(x = data$cond, y = data$voxel_2)) + geom_point()
lm
summary(lm(formula = voxel_1 ~ cond, data = data))
summary(lm(formula = voxel_2 ~ cond, data = data))
summary(lm(formula = voxel_2 ~ cond, data = data))
summary(lm(formula = voxel_1 ~ cond, data = data))
summary(lm(formula = voxel_2 ~ cond, data = data))
summary(lm(formula = voxel_2 ~ cond, data = data))
summary(lm(formula = voxel_1 ~ cond, data = data))
summary(lm(formula = voxel_2 ~ cond, data = data))
summary(lm(formula = voxel_1 + voxel_2 ~ cond, data = data))
summary(lm(formula = cond ~ voxel_1, data = data))
summary(lm(formula = cond ~ voxel_1, data = data))
summary(lm(formula = voxel_1 + voxel_2 ~ cond, data = data))
summary(lm(formula = voxel_1 ~ cond, data = data))
summary(lm(formula = voxel_1 ~ cond, data = data))
summary(lm(formula = voxel_2 ~ cond, data = data))
summary(lm(formula = cond ~ voxel_2, data = data))
summary(lm(formula = cond ~ voxel_1, data = data))
summary(lm(formula = cond ~ voxel_1, data = data))
summary(lm(formula = cond ~ voxel_1 + voxel_2, data = data))
summary(lm(formula = cond ~ voxel_1 + voxel_2, data = data))
library(car)
scatter3d(cond ~ voxel_1 + voxel_2, data)
scatter3d(cond ~ voxel_1 + voxel_2, data)
summary(lm(formula = cond ~ voxel_1:voxel_2, data = data))
summary(lm(formula = cond ~ voxel_1:voxel_2, data = data))
summary(lm(formula = cond ~ voxel_1**voxel_2, data = data))
summary(lm(formula = cond ~ voxel_1**voxel_2, data = data))
summary(lm(formula = cond ~ voxel_1:voxel_2, data = data))
summary(lm(formula = cond ~ voxel_1:voxel_2, data = data))
q()
n
install.packages("e1071")
size()
size
data
?predict
indices
-indices
data[-indices]
data[-indices,]
model1
model2
q()
n
model3
?svm
model3
indices
glimpse(data[indices,])
T(data[indices,])
data[indices,]
data[-indices,]
indices
-indices
indices
?predict
model1
data
data[1,]
data[3,]
nrow(data[3,])
data[3,]
summary()
model1
data
q()
n
runif(1, .5, .5)
runif(1, .5, .5)
runif(1, .5, .5)
noise
)
data
noise
q()
n
noise
data
data
q()
n
data[-indices, ]
model3
model3$fitted
model3$terms
model3$SV
model3$fitted
data[-indices, ]
kk <- 3
kk <- if (kk == 4) 5
kk
data.frame(replicate(2, runif(1)))
data.frame(replicate(2, runif(10)))
data <- data.frame(replicate(2, runif(10)))
dat
data
data
colnames(data) <- c("voxel_1", "voxel_2")
data
data
sapply(data, function (x) print(paste(x, "asdf")))
data.frame(replicate(2, runif(10)))
sapply(data, function (x) print(paste(x, "asdf")))
sapply(data[,], function (x) print(paste(x, "asdf")))
apply(data[,], 1, function (x) print(paste(x, "asdf")))
sapply(data[,], 1, function (x) print(paste(x, "asdf")))
apply(data[,], 1, function (x) {c(x, "a")})
lapply(data[,], 1, function (x) {c(x, "a")})
apply(data[,], 1, function (x) {c(x, "a")})
data
apply(data[,], 1, function (x) {c(x, "a")})
apply(data, 1, function (x) {c(x, "a")})
apply(data, 0, function (x) {c(x, "a")})
apply(data, 2, function (x) {c(x, "a")})
data
as.data.frame(apply(data, 1, function (x) {c(x, "a")}))
data
data
data
3**2
q()
n
math.pi
pi
diameter
indices
data[-indices,]
data[order(data),]
data[order(data, -cond),]
data[order(-z),]
data[with(data, order(-z)), ]
data[with(data, order(-cond)), ]
data[with(data, order(cond)), ]
data
data[-indices,]
model3
plot(model3, data)
geom_abline(slope=)
q()
n
data[with(data, order(-cond)), ]
lm(x = data[, "voxel_1"], y = data[, "cond"])
lm(x = data[, "voxel_1"], y = data[, "cond"], formula = y ~ x)
lm(x = data[, "voxel_1"], y = data[, "cond"], data = data, formula = y ~ x)
lm(x = data[, "voxel_1"], y = data[, "cond"], data = data, formula = "voxel_1 ~ cond")
lm(data = data, formula = "voxel_1 ~ cond")
element_
multipleClasses
multiplot
plot_grid
mydata <- data.frame(myGroup = c('a', 'b'), myX = c(1,1))

qplot(data = mydata, 
    x = myX, 
    facets = ~myGroup)
q()
n
q()
n
?plot_grid
?geom_abline
q()
n
?geom_text
mods <- summary(lm(voxel_1 ~ cond, data))
mods
mods$coefficients
mods$coefficients
round("0.12343214", 3)
round(0.12343214, 3)
atan(.25)
atan(1)
atan(99999)
?atan
atan(1)
atan(1/180)
?atan
atan(1)
atan(1) * 8
atan(1) * (pi/180)
atan(1) * (180/pi)
atan(.4512) * (180/pi)
atan(.4378) * (180/pi)
atan(.021) * (180/pi)
atan(.058) * (180/pi)
atan(.5) * (180/pi)
atan(.5) * (180/pi)
45/2
atan(.5/1) * (180/pi)
atan(2/1) * (180/pi)
atan(1) * (180/pi)
atan(999) * (180/pi)
atan(0) * (180/pi)
atan(2) * (180/pi)
atan(.5/1) * (180/pi)
45/2
atan(1/2) * (180/pi)
atan(1/2)
pi/8
pi/4
atan(1)
pi/8
atan(1/2) * (180/pi)
atan(1/2)
atan(1/2) * (180/pi)
pi/8 * 180/pi
atan(1/2) * (180/pi)
pi/8 * 180/pi
pi/8 * 180/pi
pi/8 * 180/pi  C-c C-c
q()
n
